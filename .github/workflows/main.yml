name: CD with Gradle
	
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
permissions:
  contents: read

 # 실제 실행될 내용들을 정의합니다.
jobs:
  build:
   runs-on: ubuntu-latest # ubuntu 최신 버전에서 script를 실행

   steps:
     - uses: actions/checkout@v3

     - name: Set up JDK 17
       uses: actions/setup-java@v3
       with:
         java-version: '17'
         distribution: "adopt"
     # Github secrets로부터 데이터를 받아서, 워크 플로우에 파일을 생성
     - name: Make config file
       run: |
           cd ./src/main/resources
           touch ./application.yml
           touch ./application-db.yml
           touch ./quartz.properties
           echo "${{ secrets.PROJECT_CONFIG }}" > ./application.yml
           echo "${{ secrets.DB_CONFIG }}" > ./application-db.yml
           echo "${{ secrets.SCHEDULER_CONFIG }}" > ./quartz.properties
           echo "${{ secrets.SCHEDULER_INIT_SQL }}" > ./init_quartz.sql
       shell: bash

     # gradle을 통해 소스를 빌드.
     - name: Build with Gradle
       run: |
            chmod +x ./gradlew
            ./gradlew clean build -x test
   

     - name: Docker build & push to docker repo
       run: |
            docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
            docker build -f Dockerfile -t ${{ secrets.DOCKER_REPO }}/inha-unsolved .
            docker push ${{ secrets.DOCKER_REPO }}/inha-unsolved
   

     - name: Deploy to server
       uses: appleboy/ssh-action@master
       id: deploy
       with:
         host: ${{ secrets.HOST }}
         username: ubuntu
         key: ${{ secrets.KEY }}
         envs: GITHUB_SHA
       script: |
         sudo docker rm -f $(docker ps -qa)
         sudo docker pull ${{ secrets.DOCKER_REPO }}/inha-unsolved
         docker-compose up -d
         docker image prune -f
